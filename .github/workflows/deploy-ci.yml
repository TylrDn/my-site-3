name: Deploy CI - MacroSight Static Site

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate-site:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Use Node (from .nvmrc)
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: npm

        - name: Install deps
          run: npm ci --prefer-offline
        - name: Retry install if failed
          if: failure()
          run: |
            echo "Retrying install with clean cache..."
            rm -rf node_modules
            npm cache clean --force || true
            npm install

        - name: Lint (ESLint + HTML)
          run: |
            npm run lint --if-present
            npm run lint:html --if-present
        - name: Static HTML postMessage listener check
          run: npm run check:postmessage

      - name: Validate HTML/CSS links
        run: npm run validate:links

      - name: a11y scan
        run: npm run test:a11y

        - name: Unit tests (Node test runner)
          run: npm run test:unit
        - name: Deprecations / dead code
          run: |
            npm run deprecations || true
            npm run find-deadcode || true
        - name: Start static server
          run: |
            PORT=4173 NODE_ENV=test nohup node scripts/serve.mjs > /dev/null 2>&1 &
            echo $! > server.pid
            sleep 1
        - name: E2E (Playwright minimal)
          run: npm run test:e2e
        - name: Stop server
          if: always()
          run: |
            if [ -f server.pid ]; then kill -9 $(cat server.pid) || true; fi

  deploy:
    needs: validate-site
    if: >
      (github.ref == 'refs/heads/main') &&
      (needs.validate-site.result == 'success')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: npm
      - run: npm ci --prefer-offline
      - name: Netlify deploy (prod)
        run: npx netlify deploy --dir=public --prod
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
