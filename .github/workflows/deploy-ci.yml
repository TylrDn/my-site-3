name: Deploy CI - MacroSight Static Site

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate-site:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node (from .nvmrc)
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: npm

      - name: Cache Playwright browsers
        id: pw-cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ hashFiles('package-lock.json') }}

      - name: Install deps
        run: npm ci --prefer-offline

      - name: Install Playwright browsers
        if: steps.pw-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps

      - name: Lint (ESLint)
        run: npm run lint --if-present

      - name: Validate HTML/CSS links
        run: npm run validate:links

      - name: a11y scan
        run: npm run test:a11y

      - name: E2E smoke (CI)
        env: { CI: true }
        run: npm run test:e2e:ci

      # Debuggable artifacts even on failure
      - name: Upload Playwright HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report

      - name: Upload JUnit XML
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-xml
          path: test-results/junit.xml

      - name: Annotate test results
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: Playwright Tests
          path: test-results/junit.xml
          reporter: java-junit
          fail-on-error: false

  deploy:
    needs: validate-site
    if: >
      (github.ref == 'refs/heads/main') &&
      (needs.validate-site.result == 'success')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: npm
      - run: npm ci --prefer-offline
      - name: Netlify deploy (prod)
        run: npx netlify deploy --dir=public --prod
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
